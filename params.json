{"name":"UXRocket Modal","tagline":"Modal Plugin","body":"UX Rocket Modal\r\n==============\r\nA multi window capable modal plugin. It can easily customizable via its settings and styles.\r\n\r\nSample usage\r\n\r\n```html\r\n<a href=\"#hidden-content\" class=\"modal\">Open Modal</a>\r\n```\r\n\r\n```js\r\n// with defaults\r\n$('.modal').modal();\r\n\r\n// or with your settings\r\n$('.modal').modal({\r\n    fixed: true,\r\n    maxWidth: '640px',\r\n    maxHeight: '90%'\r\n});\r\n```\r\n\r\nAlso it supports direct call from your script, during on page load or after an event\r\n\r\n```js\r\n// load a URL\r\n$.uxrmodal({\r\n    href: './modal-content.html'\r\n});\r\n\r\n// load and html content\r\nvar html = '<div class=\"my-content\">' +\r\n           '    <h2 class=\"my-content-title\">Hello World</h2>' +\r\n           '    <p>This is the modal content</p>' +\r\n           '</div>';\r\n\r\n$.uxrmodal({\r\n    html: html\r\n});\r\n```\r\n\r\n### Options\r\nProperty\t  | Default | Description\r\n------------- | ------- | ------------------------------------------------------------------------\r\nclassName     | ''      | For advanced styling, allow to add your own style class to modal wrapper\r\nhref          | ''      | URL to load. If an external URL, uses Ajax Get to load the URL. If it is an inline content e.g. a hidden div, uses its html\r\nwidth         | ''      | Width of the modal windows\r\nheight        | ''      | Height of the modal windows\r\nmaxWidth      | ''      | Max width of the modal windows. Add scrollbars when content is wider than the modal\r\nmaxHeight     | ''      | Max height of the modal windows. Add scrollbars when content is longer than the modal\r\nappendTo      | body    | Where to append the modal content in the DOM. Overlay always appends to `body`\r\nallowMultiple | false   | Allows to open more than one modal simultaneously\r\nblockUI       | true    | Adds an overlay at the top of the page\r\noverlayClose  | true    | Closes the modals when clicking on the overlay\r\nclose         | true    | Turns on/off the close icon in the modal\r\niframe        | false   | If true, the URL will load to an iFrame in the modal \r\nhtml          | false   | You can set an HTML content rather than a URL.\r\nfixed         | false   | Uses fixed position for the modal \r\n\r\nIf you use a cms or a backend heavy development environment, you can also set the plugin options via data attributes. Following table shows the name of the available data attributes for defining options.\r\n\r\n```html\r\n<a href=\"#modal-content\" data-max-height=\"90%\" data-fixed=\"true\" data-on-close=\"refreshForm()\">Open modal</a>\r\n```\r\n\r\nData Attribute | Description\r\n-------------- | ------------------------------------------------------------------------\r\nclass-name     | For advanced styling, allow to add your own style class to modal wrapper\r\nhref           | URL to load. If an external URL, uses Ajax Get to load the URL. If it is an inline content e.g. a hidden div, uses its html\r\nwidth          | Width of the modal windows\r\nheight         | Height of the modal windows\r\nmax-width       | Max width of the modal windows. Add scrollbars when content is wider than the modal\r\nmax-height      | Max height of the modal windows. Add scrollbars when content is longer than the modal\r\nappend-to       | Where to append the modal content in the DOM\r\nblock-u-i        | Adds an overlay at the top of the page\r\noverlay-close  | Closes the modals when clicking on the overlay\r\nallow-multiple | Allows to open more than one modal simultaneously\r\nclose          | Turns on/off the close icon in the modal\r\niframe         | If true, the URL will load to an iFrame in the modal \r\nhtml           | You can set an HTML content rather than a URL.\r\nfixed          | Uses fixed position for the modal \r\non-ready       | Calls the function when plugin is ready\r\non-open        | Calls the function when modal is opened\r\non-start       | Calls the function when modal start to get content to show\r\non-load        | Calls the function when modal fetched and loaded to content\r\non-close\t   | Calls the function when modal is closed\r\non-remove\t   | Calls the function when modal is removed\r\n\r\nThere are also available callbacks automatically fired when a certain event occurred. These callbacks can set with plugin options.\r\n\r\nCallback\t\t\t | &nbsp;\r\n-------------------- | -----\r\nonReady              | Calls the function when plugin is ready\r\nonOpen       \t     | Calls the function when modal is opened\r\nonStart     \t     | Calls the function when modal start to get content to show\r\nonLoad      \t     | Calls the function when modal fetched and loaded to content\r\nonClose\t\t         | Calls the function when modal is closed\r\nonRemove\t         | Calls the function when modal is remove\r\n\r\n### Event Hooks\r\nPlugin uses both generic events and custom events. All events triggered in *uxrModal* namespace. Rather than firing a function/method via callback you can attach your own method to plugin events. Note that, custom events are triggered on the binded element e.g. the anchor opens the modal. \r\n\r\n```js\r\n$('.modal').on('uxrclose.uxrModal', function(){\r\n    form.submit(); // any method, function you want to define\r\n});\r\n```\r\n \r\nEvent Name\t\t\t | &nbsp;\r\n-------------------- | -----\r\nuxrready             | triggers when uxrModal binds to element for the first time\r\nuxropen              | triggers when modal windows opens, the overlay and loading screen become visible\r\nuxrstart             | triggers when modal content started to fetching, either from a inline source, html output or ajax call, or iframe\r\nuxrload              | triggers when modal content fetched and inserted to the visible modal screen\r\nuxrclose             | triggers when visible modal window closed either from clicking the overlay or close button\r\nuxrresize            | triggers when modal contents resized, (resize actions actually working when you set maxHeight or maxWidth options and shows scrollbars when need)\r\nuxrremove            | triggers when uxrModal unbinds from the element.\r\n\r\nAll these custom events except `uxrresize` also hooked the element itself when plugin is binded, and fires the callback options when triggered. `resize` method automatically called after content loaded to modal and `uxrresize` event triggered. \r\n\r\n\r\n### Public Methods\r\nMethod\t\t\t\t\t\t| Description\r\n--------------------------- | -------------------------------------------------------\r\n$(selector).modal(options)  | Binds the plugin \r\n$.uxrmodal(options)         | Directly opens a modal with desired options\r\n$.uxrmodal.resize           | Resizes the opened modals\r\n$.uxrmodal.close            | Closes the opened modals\r\n$.uxrmodal.version          | Shows the plugin version\r\n$.uxrmodal.settings         | Shows the default settings\r\n$.uxrmodal.getInstances()   | Shows the open modals and the lastOpened modal instance. You can get the last remaining instance's properties when all modals are closed.\r\n\r\n```js\r\nvar activeInstances = $.uxrmodal.getInstances();\r\n\r\n// you get an object with keys as instance IDs and lastInstance\r\n```\r\n\r\nSample activeInstance\r\n\r\n```js\r\n// at least on modal is opened\r\n{\r\n    1: {\r\n        $content: n.fn.init[1], // modal container template as a jQuery instance\r\n        $el: n.fn.init[1], // jQuery instance of binded element\r\n        _defaults: Object,\r\n        _direct: false // opened via link\r\n        _instance: 1 // the instance id,\r\n        _name: 'uxrModal', // plugin name\r\n        el: 'a.modal',\r\n        href: 'somelink' // link to be open\r\n        html: 'some html' // html string when html string added to direct call, or a jQuery instance of the fetched html from ajax or inline source\r\n        inpage: false // indicates ajax call, iframe or an element in current page\r\n        options: Object // plugin options\r\n        previousInstance: Modal // modal instance opened before this modal. if only one modal present or multiple modal is not used, it is equal to the instance itself\r\n        selector: '.modal' // jQuery selector used to bind plugin\r\n    },\r\n    lastInstance: Modal // if every modals are closed, it is the active instance. Instance 1 in this sample. In multiple modal activated and a modal is recently closed, it is the last closed modal.\r\n}\r\n\r\n// multiple mode active, first instance 7 opened then instance 5 opened\r\n{\r\n    5: {\r\n        // ... other properties\r\n        _instance: 5,\r\n        previousInstance: Modal // is equal to instance 7\r\n    },\r\n    7: {\r\n        // ... other properties\r\n        _instance: 7,\r\n        previousInstance: Modal // is equal to instance 7 since 7 is the first opened instance.\r\n        \r\n    }\r\n    lastInstance: Modal // is equal to instance5\r\n}\r\n\r\n// every modal closed\r\n{\r\n    lastInstance: Modal // last closed modal's instance.\r\n}\r\n```\r\n","google":"UA-52570271-4","note":"Don't delete this file! It's used internally to help with page regeneration."}